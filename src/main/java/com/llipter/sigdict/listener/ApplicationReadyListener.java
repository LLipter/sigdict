package com.llipter.sigdict.listener;

import com.llipter.sigdict.entity.User;
import com.llipter.sigdict.repository.UserRepository;
import com.llipter.sigdict.security.SymmetricEncryption;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.stereotype.Component;

@Component
public class ApplicationReadyListener implements ApplicationListener<ApplicationReadyEvent> {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;


    /**
     * This event is executed as late as conceivably possible to indicate that
     * the application is ready to service requests.
     * see https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-application-events-and-listeners
     */
    @Override
    public void onApplicationEvent(ApplicationReadyEvent event) {
        // generate master key
        SymmetricEncryption.generateApplicationMasterKey();

        // generate initial account
        User user = null;
        user = new User("llipter", "cestlavie", "llipter@foxmail.com");
        userRepository.save(user);
        user = new User("epfl", "eth", "felicitations@admitted.edu");
        userRepository.save(user);
    }
}

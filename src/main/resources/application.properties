spring.datasource.url=jdbc:h2:mem:sigdictdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
# this doesn't work
# spring.h2.console.settings.web-allow-others=true
# to allow remote access to h2 console
# write webAllowOthers=true to a file called .h2.server.properties
# and stored it under your user directory (cd ~)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# without this configuration Tomcat will cancel the request,
# and even though you'll see in the logs that application is handling the error,
# the browser already received cancellation of request from Tomcat and isn't listening for the response anymore.
server.tomcat.max-swallow-size=-1
# to handle MaxUploadSizeExceededException with ExceptionHandler directly in the controller class
# otherwise that exception will be triggered before the request is mapped to controller
spring.servlet.multipart.resolve-lazily=true
# we will handle all errors ourselves
server.error.whitelabel.enabled=false
server.error.path=/error.html